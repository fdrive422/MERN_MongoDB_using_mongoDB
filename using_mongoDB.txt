Using MongoDB

// Create a database called 'my_first_db'.
> use my_first_db
switched to db my_first_db

// Create students collection.
> db.createCollection("students")
{ "ok" : 1 }

// Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
// Create 5 students with the appropriate info.
> db.students.insert({name: "Francis", home_state: "California", lucky_number: 22, birthday: {month: 4, day: 22, year: 1967}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "John", home_state: "California", lucky_number: 11, birthday: {month: 1, day: 5, year: 1963}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Tom", home_state: "New York", lucky_number: 2, birthday: {month: 7, day: 11, year: 1975}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Ethan", home_state: "Washington", lucky_number: 7, birthday: {month: 12, day: 20, year: 1980}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Brad", home_state: "Texas", lucky_number: 13, birthday: {month: 3, day: 12, year: 1965}})
WriteResult({ "nInserted" : 1 })

// Get all students.
> db.students.find().pretty()
{
        "_id" : ObjectId("62245457e5c08393c1f72b88"),
        "name" : "Francis",
        "home_state" : "California",
        "lucky_number" : 22,
        "birthday" : {
                "month" : 4,
                "day" : 22,
                "year" : 1967
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
        ]
}
{
        "_id" : ObjectId("6224546fe5c08393c1f72b89"),
        "name" : "Tom",
        "home_state" : "New York",
        "lucky_number" : 2,
        "birthday" : {
                "month" : 7,
                "day" : 11,
                "year" : 1975
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
        ]
}
{
        "_id" : ObjectId("6224547ae5c08393c1f72b8a"),
        "name" : "Ethan",
        "home_state" : "Washington",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 12,
                "day" : 20,
                "year" : 1980
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB"
        ]
}
{
        "_id" : ObjectId("62245483e5c08393c1f72b8b"),
        "name" : "Brad",
        "home_state" : "Texas",
        "lucky_number" : 13,
        "birthday" : {
                "month" : 3,
                "day" : 12,
                "year" : 1965
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB"
        ]
}
{
        "_id" : ObjectId("62245c91e5c08393c1f72b8c"),
        "name" : "John",
        "home_state" : "California",
        "lucky_number" : 11,
        "birthday" : {
                "month" : 1,
                "day" : 5,
                "year" : 1963
        }
}

// Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.students.find({ $or: [{home_state: "California"}, {home_state: "Washington"}]}).pretty()
{
        "_id" : ObjectId("62245457e5c08393c1f72b88"),
        "name" : "Francis",
        "home_state" : "California",
        "lucky_number" : 22,
        "birthday" : {
                "month" : 4,
                "day" : 22,
                "year" : 1967
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
        ]
}
{
        "_id" : ObjectId("6224547ae5c08393c1f72b8a"),
        "name" : "Ethan",
        "home_state" : "Washington",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 12,
                "day" : 20,
                "year" : 1980
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB"
        ]
}
{
        "_id" : ObjectId("62245c91e5c08393c1f72b8c"),
        "name" : "John",
        "home_state" : "California",
        "lucky_number" : 11,
        "birthday" : {
                "month" : 1,
                "day" : 5,
                "year" : 1963
        }
}

// Get all students whose lucky number is greater than 3
> db.students.find({lucky_number: {$gt: 3}}).pretty()
{
        "_id" : ObjectId("62245457e5c08393c1f72b88"),
        "name" : "Francis",
        "home_state" : "California",
        "lucky_number" : 22,
        "birthday" : {
                "month" : 4,
                "day" : 22,
                "year" : 1967
        }
}
{
        "_id" : ObjectId("6224547ae5c08393c1f72b8a"),
        "name" : "Ethan",
        "home_state" : "Washington",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 12,
                "day" : 20,
                "year" : 1980
        }
}
{
        "_id" : ObjectId("62245483e5c08393c1f72b8b"),
        "name" : "Brad",
        "home_state" : "Texas",
        "lucky_number" : 13,
        "birthday" : {
                "month" : 3,
                "day" : 12,
                "year" : 1965
        }
}

// Get all students whose lucky number is less than or equal to 10 
> db.students.find({lucky_number: {$lte: 10}}).pretty()
{
        "_id" : ObjectId("6224546fe5c08393c1f72b89"),
        "name" : "Tom",
        "home_state" : "New York",
        "lucky_number" : 2,
        "birthday" : {
                "month" : 7,
                "day" : 11,
                "year" : 1975
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
        ]
}
{
        "_id" : ObjectId("6224547ae5c08393c1f72b8a"),
        "name" : "Ethan",
        "home_state" : "Washington",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 12,
                "day" : 20,
                "year" : 1980
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB"
        ]
}

// Get all students whose lucky number is between 1 and 9 (inclusive)
> db.students.find({ $and: [{lucky_number: {$gte: 1}}, {lucky_number: {$lte: 9}}]}).pretty()
{
        "_id" : ObjectId("6224546fe5c08393c1f72b89"),
        "name" : "Tom",
        "home_state" : "New York",
        "lucky_number" : 2,
        "birthday" : {
                "month" : 7,
                "day" : 11,
                "year" : 1975
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
        ]
}
{
        "_id" : ObjectId("6224547ae5c08393c1f72b8a"),
        "name" : "Ethan",
        "home_state" : "Washington",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 12,
                "day" : 20,
                "year" : 1980
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB"
        ]
}

// Add a field named 'interests' to all student documents in the collection. 
// The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. 
// Add this field to all documents using a single command.
> db.students.updateMany({}, {$set: {interests: ["coding", "brunch", "MongoDB"]}})
{ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 3 }


// Add some unique interests for each particular student into each of their interest arrays.
> db.students.update({name: "Francis"}, {$push: {interests: "golf"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Tom"}, {$push: {interests: "motorcycles"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

// Add the interest 'taxes' into someone's interest array.
> db.students.update({name: "Ethan"}, {$push: {interests: "taxes"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

// Remove the 'taxes' interest you just added.
> db.students.update({name: "Ethan"}, {$pull: {interests: "taxes"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

// Remove all students who are from California.
> db.students.remove({home_state: "California"})
WriteResult({ "nRemoved" : 2 })

// Remove a student by name. 
> db.students.remove({name: "Brad"})
WriteResult({ "nRemoved" : 1 })

// Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.students.remove({lucky_number: {$gt: 5}}, true)
WriteResult({ "nRemoved" : 1 })

// Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.students.updateMany({}, {$set: {number_of_belts: 0}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

// Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.students.updateMany({home_state: "Washington"}, {$set: {number_of_belts: 1}})
{ "acknowledged" : true, "matchedCount" : 0, "modifiedCount" : 0 }

// Rename the 'number_of_belts' field to 'belts_earned'
> db.students.updateMany({}, {$rename: {"number_of_belts": "belts_earned"}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

// Remove the 'lucky_number' field.
> db.students.updateMany({}, {$unset: {lucky_number: ""}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

// Add a 'updated_on' field, and set the value as the current date.
> db.students.updateMany({}, {$currentDate: {"updated_at": {$type: "date"}}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }